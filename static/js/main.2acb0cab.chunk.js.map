{"version":3,"sources":["components/card.jsx","components/kanban.jsx","App.js","index.js"],"names":["Card","props","state","editable","title","description","id","className","this","React","Component","Kanban","allColumns","currentColumn","currentTitle","currentDescription","createColumn","deleteItem","bind","editItem","addCard","createSection","onDragEnd","closeModal","openModal","createTodo","clearAll","modal","updateLocalStorage","getLocalStorage","forEach","ele","localStorage","setItem","JSON","stringify","Object","keys","length","setState","todos","cards","uuid","colName","inprog","done","test","parse","getItem","i","columnItems","j","card","push","console","log","e","preventDefault","alert","clear","field","currentTarget","value","onSubmit","handleSubmit","placeholder","type","onChange","update","Row","Button","onClick","document","getElementsByClassName","style","display","newTodoContainer","parentElement","previousElementSibling","deletedCard","find","x","idx","el","index","splice","result","destination","source","droppableId","Array","from","removed","newState","startColumn","endColumn","startDupes","endDupes","Col","removeCol","direction","provided","droppableProps","ref","innerRef","map","item","key","draggableId","draggableProps","dragHandleProps","removeItem","indexOf","columns","includes","column","Navbar","sticky","Brand","Toggle","aria-controls","Collapse","Nav","NavDropdown","Item","href","icon","faLinkedin","faAngellist","faGithub","Divider","faReadme","Link","Form","inline","variant","Container","fluid","mapColumns","App","DndProvider","backend","HTML5Backend","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2acb0cab.chunk.js","sourcesContent":["import React from 'react';\n\n\nclass Card extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      editable: false,\n      title: \"\",\n      description: \"\",\n      id: \"\",\n    };\n    this.state.title = this.props.title;\n    this.state.description = this.props.description;\n    this.state.id = this.props.id;\n  }\n  \n\n  render() {\n    return (\n      <div className=\"mb-2 mt-3\" id={this.state.id}>\n        <div>\n          <div>\n            <h6 className=\" pt-3 text-sm text-secondary\">{this.state.title}</h6>\n          </div>\n          <div>\n            <p className=\"pt-3 text-secondary\">{this.state.description}</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Card;","import React from \"react\";\nimport Card from './card.jsx';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport uuid from \"uuid/v4\"\nimport {Button, Row, Col, Container, Navbar, Nav, NavDropdown, Form, Link} from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFacebook, faLinkedin, faAngellist, faGithub, faBlogger, faReadme } from \"@fortawesome/free-brands-svg-icons\";\n\n\n\n\n\nclass Kanban extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allColumns: [],\n      currentColumn: \"\",\n      currentTitle: \"\",\n      currentDescription: \"\",\n      createColumn: \"\",\n    };\n\n    this.deleteItem = this.deleteItem.bind(this);\n    this.editItem = this.editItem.bind(this);\n    this.addCard = this.addCard.bind(this);\n    this.createSection = this.createSection.bind(this);\n    this.onDragEnd = this.onDragEnd.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.openModal = this.openModal.bind(this);\n    this.createTodo = this.createTodo.bind(this);\n    this.clearAll = this.clearAll.bind(this);\n    this.modal = this.modal.bind(this);\n    this.updateLocalStorage = this.updateLocalStorage.bind(this);\n    this.createColumn = this.createColumn.bind(this);\n  }\n\n  componentDidMount() {\n    this.getLocalStorage();\n    // this.clearAll()\n  }\n\n  updateLocalStorage() {\n    // this.clearAll();\n    const allColumns = this.state.allColumns;\n    allColumns.forEach((ele) =>\n      localStorage.setItem(ele, JSON.stringify(this.state[ele]))\n    );\n    localStorage.setItem(\"allColumns\", JSON.stringify(allColumns));\n  }\n\n  async getLocalStorage() {\n    if (!Object.keys(localStorage).length) {\n      // localstorage of all columns instead of length??\n      await this.setState({\n        allColumns: [\"todos\", \"inprog\", \"done\"],\n        todos: {\n          cards: [],\n          id: uuid(),\n          colName: \"todos\",\n        },\n        inprog: {\n          cards: [],\n          id: uuid(),\n          colName: \"inprog\",\n        },\n        done: {\n          cards: [],\n          id: uuid(),\n          colName: \"done\",\n        },\n      });\n      let test = {\n        cards: [],\n        id: uuid(),\n        colName: \"done\",\n      };\n      localStorage.setItem(\"todos\", JSON.stringify(test));\n      localStorage.setItem(\"inprog\", JSON.stringify(test));\n      localStorage.setItem(\"done\", JSON.stringify(test));\n      localStorage.setItem(\n        \"allColumns\",\n        JSON.stringify([\"todos\", \"inprog\", \"done\"])\n      );\n    } else {\n      let allColumns = JSON.parse(localStorage.getItem(\"allColumns\"));\n\n      for (let i = 0; i < allColumns.length; i++) {\n        let currentColumn = allColumns[i];\n        await this.setState({\n          [currentColumn]: {\n            cards: [],\n            id: uuid(),\n            colName: `${currentColumn}`,\n          },\n        });\n        let cards = [];\n        let columnItems = JSON.parse(localStorage.getItem(allColumns[i]));\n\n        let length = columnItems.cards.length;\n        for (let j = 0; j < length; j++) {\n          let title = columnItems.cards[j].title;\n          let description = columnItems.cards[j].description;\n          let id = columnItems.cards[j].id;\n          const card = { title: title, description: description, id: id };\n          cards.push(card);\n          await this.setState({\n            [this.state[currentColumn].cards]: this.state[\n              currentColumn\n            ].cards.push(card),\n          });\n        }\n      }\n      this.setState({ allColumns: allColumns });\n      console.log(this.state);\n    }\n  }\n\n  async handleSubmit(e) {\n    e.preventDefault();\n    let cards;\n    const colName = this.state.currentColumn;\n    if (localStorage.getItem(colName) === null) {\n      cards = [];\n    } else {\n      cards = JSON.parse(localStorage.getItem(colName));\n    }\n\n    const card = {\n      title: this.state.currentTitle,\n      description: this.state.currentDescription,\n      id: uuid(),\n    };\n\n    if (card.title === \"\") {\n      alert('Please Enter A Valid Title')\n      return; \n    }\n\n    await this.setState({\n      [this.state[colName].cards]: this.state[colName].cards.push(card),\n    });\n    this.updateLocalStorage();\n    this.closeModal();\n    this.setState({ currentTitle: \"\", currentDescription: \"\" });\n  }\n\n  clearAll() {\n    localStorage.clear();\n    this.setState({ allColumns: [] });\n    this.getLocalStorage();\n  }\n\n  update(field) {\n    return (e) =>\n      this.setState({\n        [field]: e.currentTarget.value,\n      });\n  }\n\n  createTodo() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit.bind(this)}>\n          <div>\n            <label>\n              <input\n                className=\"mt-5\"\n                placeholder=\"Title\"\n                type=\"text\"\n                value={this.state.currentTitle}\n                onChange={this.update(\"currentTitle\")}\n              />\n            </label>\n            <label>\n              <input\n                className=\"mt-5\"\n                placeholder=\"Description\"\n                type=\"text\"\n                value={this.state.currentDescription}\n                onChange={this.update(\"currentDescription\")}\n              />\n            </label>\n          </div>\n          <Row>\n            <Button className=\"btn-sm ml-2 mt-5 mb-2 mr-0\" type=\"submit\">\n              Submit\n            </Button>\n            <Button className=\"btn-sm m-2 mt-5 ml-0\" onClick={this.closeModal}>\n              Close\n            </Button>\n          </Row>\n        </form>\n      </div>\n    );\n  }\n\n  openModal() {\n    const modal = document.getElementsByClassName(\"newTodoForm\");\n    modal[0].style.display = \"flex\";\n  }\n\n  closeModal() {\n    const modal = document.getElementsByClassName(\"newTodoForm\");\n    modal[0].style.display = \"none\";\n    this.setState({ newTodoContainer: \"hidden\" });\n  }\n\n  addCard(colName) {\n    this.setState({ currentColumn: colName });\n    this.openModal();\n  }\n\n  async deleteItem(colName, e) {\n    const id = e.currentTarget.parentElement.previousElementSibling.id;\n    let cards = [...this.state[colName].cards];\n    const deletedCard = cards.find((x) => x.id === id);\n    let idx = 0;\n    cards.forEach((el, index) => {\n      if (el.id === deletedCard.id) {\n        return (idx = index);\n      }\n    });\n    cards.splice(idx, 1);\n    await this.setState({\n      [colName]: { cards, id: this.state[colName].id, colName: colName },\n    });\n    this.updateLocalStorage();\n  }\n\n  async editItem(colName, e) {\n    const id = e.currentTarget.parentElement.previousElementSibling.id;\n    let cards = [...this.state[colName].cards];\n    const deletedCard = cards.find((x) => x.id === id);\n    let idx = 0;\n    cards.forEach((el, index) => {\n      if (el.id === deletedCard.id) {\n        return (idx = index);\n      }\n    });\n    cards.splice(idx, 1);\n    await this.setState({\n      [colName]: { cards, id: this.state[colName].id, colName: colName },\n    });\n    this.updateLocalStorage();\n  }\n\n  dragCol(result) {\n    \n  }\n\n  async onDragEnd(result) {\n    const { destination, source } = result;\n    if (!destination) return;\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    )\n      return;\n    if (result.type === \"column\") {\n      const allColumns = Array.from(this.state.allColumns)\n      const [removed] = allColumns.splice(source.index, 1)\n      allColumns.splice(destination.index, 0, removed)\n      const newState = {\n        ...this.state,\n        allColumns: allColumns\n      }\n      await this.setState(newState)\n      this.updateLocalStorage();\n      return;\n    }\n    const startColumn = this.state[source.droppableId].cards;\n    const endColumn = this.state[destination.droppableId].cards;\n    const startDupes = Array.from(startColumn);\n    const endDupes = Array.from(endColumn);\n\n    if (endColumn === startColumn) {\n      let [removed] = startDupes.splice(source.index, 1);\n      startDupes.splice(destination.index, 0, removed);\n      this.setState({\n        [source.droppableId]: {\n          cards: startDupes,\n          id: this.state[destination.droppableId].id,\n          colName: source.droppableId,\n        },\n      });\n    } else {\n      let [removed] = startDupes.splice(source.index, 1);\n      endDupes.splice(destination.index, 0, removed);\n      await this.setState({\n        [source.droppableId]: {\n          cards: startDupes,\n          id: this.state[source.droppableId].id,\n          colName: source.droppableId,\n        },\n        [destination.droppableId]: {\n          cards: endDupes,\n          id: this.state[destination.droppableId].id,\n          colName: destination.droppableId,\n        },\n      });\n      this.updateLocalStorage();\n    }\n  }\n\n  createSection(colName) {\n    return (\n      <div id=\"container\">\n        <h2>{colName}</h2>\n        <Col>\n          <Row>\n            <Button\n              className=\"btn-block  btn-light text-primary m-2\"\n              onClick={() => this.removeCol(colName)}\n            >\n              -\n            </Button>\n          </Row>\n          <Row>\n            <Button\n              className=\"btn-block  btn-light text-primary m-2\"\n              onClick={() => this.addCard(colName)}\n            >\n              +\n            </Button>\n          </Row>\n        </Col>\n        <div>\n          <Droppable droppableId={colName} className=\"dropable\" direction=\"vertical\">\n            {(provided) => {\n              return (\n                <div\n                  id={colName}\n                  className=\"card-drag\"\n                  {...provided.droppableProps}\n                  ref={provided.innerRef}\n                >\n                  {this.state[colName].cards.map((item, idx) => {\n                    return (\n                      <Draggable\n                        key={item.id}\n                        draggableId={item.id}\n                        index={idx}\n                      >\n                        {(provided) => {\n                          return (\n                            <Col\n                              className=\"bg-light shadow shadow-lg mt-3 border-primary border\"\n                              ref={provided.innerRef}\n                              {...provided.draggableProps}\n                              {...provided.dragHandleProps}\n                              \n                            >\n                              <Card\n                                title={item.title}\n                                description={item.description}\n                                id={item.id}\n                              />\n                              <div className=\" flex flex-column justify-content-end\">\n                                {/* <Button\n                                  \n                                  onClick={(e) => this.editItem(colName, e)}\n                                >\n                                  Edit\n                                </Button> */}\n                                <Button\n                                  className=\"btn-sm py-0 mb-2 btn-danger\"\n                                  onClick={(e) => this.deleteItem(colName, e)}\n                                >\n                                  X\n                                </Button>\n                              </div>\n                            </Col>\n                          );\n                        }}\n                      </Draggable>\n                    );\n                  })}\n                  {provided.placeholder}\n                </div>\n              );\n            }}\n          </Droppable>\n        </div>\n      </div>\n    );\n  }\n\n  removeCol(colName) {\n    localStorage.removeItem(colName);\n\n    const idx = this.state.allColumns.indexOf(colName)\n    let columns = Array.from(this.state.allColumns)\n    columns.splice(idx, 1)\n    localStorage.setItem(\"allColumns\", JSON.stringify(columns));\n    this.getLocalStorage();\n  }\n\n  async createColumn() {\n    let columns = this.state.allColumns;\n\n    if (this.state.createColumn === \"\" || columns.includes(this.state.createColumn)) {\n      alert(\"Please Enter a Valid Column Name\")\n      return;\n    }\n\n    if (this.state.allColumns.length > 4) {\n      alert(\"5 columns is the max. Please delete one if you would like to create a new column.\")\n      return;\n    }\n\n    columns.push(this.state.createColumn);\n    await this.setState({\n      allColumns: columns,\n      [this.state.createColumn]: {\n        cards: [],\n        id: uuid(),\n        colName: this.state.createColumn,\n      },\n    });\n    this.updateLocalStorage();\n    console.log(this.state);\n  }\n\n  modal() {\n    return (\n      <div className=\"newTodoForm\">\n        <div className=\"modal-content w-25 h-50\">\n          <h1 className=\" text-secondary\">Add Todo</h1>\n          {this.createTodo()}\n        </div>\n      </div>\n    );\n  }\n\n  mapColumns() {\n    debugger;\n  return (\n    <Droppable\n      className=\"dropable\"\n      droppableId=\"allColumns\"\n      direction=\"horizontal\"\n      type=\"column\"\n    >\n      {(provided) => {\n        return (\n          <div\n            id={\"Columns\"}\n            {...provided.droppableProps}\n            ref={provided.innerRef}\n          >\n            <Row className={`justify-content-left flex-nowrap row-cols-${(12 / this.state.allColumns.length)}`}>\n              {this.state.allColumns.map((column, idx) => (\n                <Draggable\n                  className=\"border-secondary border-warning\"\n                  key={idx}\n                  draggableId={idx + \"Column\"}\n                  index={idx}\n                >\n                  {(provided) => {\n                    return (\n                      <Col\n                        className={`col-${12 / this.state.allColumns.length-1} progress-bar progress-bar-striped m-3 progress-bar-animated pb-3 justify-content-start shadow-lg shadow border-warning border p-2`}\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                      >\n                        <section key={idx}>\n                          {this.createSection(column)}\n                        </section>\n                      </Col>\n                    );\n                  }}\n                </Draggable>\n              ))}\n            </Row>\n            {provided.placeholder}\n          </div>\n        );\n      }}\n    </Droppable>\n  );\n  }\n\n  render() {\n    return (\n      <>\n        <Navbar\n          sticky=\"top\"\n          className=\"w-100 navbar navbar-dark bg-primary mb-1\"\n        >\n          <Navbar.Brand className=\"main-title\">Kanban</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <NavDropdown title=\"Mackenzie Young\" id=\"basic-nav-dropdown\">\n                <NavDropdown.Item href=\"https://www.linkedin.com/in/mackenzie-young-296787189/\">\n                  <FontAwesomeIcon icon={faLinkedin} /> LinkedIn\n                </NavDropdown.Item>\n                <NavDropdown.Item href=\"https://angel.co/u/mac-young-1\">\n                  <FontAwesomeIcon icon={faAngellist} /> AngelList\n                </NavDropdown.Item>\n                <NavDropdown.Item href=\"https://github.com/mac9330\">\n                  <FontAwesomeIcon icon={faGithub} /> Github\n                </NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item href=\"https://mac9330.github.io/\">\n                  <FontAwesomeIcon icon={faReadme} /> Portfolio-Site\n                </NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n            <Nav.Link\n              href=\"https://github.com/mac9330/Kantan\"\n              className=\" nav text-white\"\n            >\n              ReadMe <FontAwesomeIcon icon={faReadme} />\n            </Nav.Link>\n            <Form inline onSubmit={() => this.createColumn()}>\n              <input\n                type=\"text\"\n                placeholder=\"Add Column\"\n                className=\"mr-sm-1\"\n                value={this.state.createColumn}\n                onChange={this.update(\"createColumn\")}\n              />\n              <Button\n                variant=\"outline-success\"\n                className=\"btn-link bg-darken-4 text-decoration-none table-hover bg-white btn-sm m-1 pl-1 pr-1 pt-0 pb-0\"\n                type=\"submit\"\n              >\n                +\n              </Button>\n            </Form>\n          </Navbar.Collapse>\n        </Navbar>\n        <Container fluid>\n          <DragDropContext onDragEnd={(result) => this.onDragEnd(result)}>\n            <Col className=\"justify-content-end\">\n              <Button onClick={this.clearAll}>Reset to default</Button>\n            </Col>\n            {this.mapColumns()}\n          </DragDropContext>\n          {this.modal()}\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Kanban;\n","import React from 'react';\n// import logo from './mintbean.png';\nimport './styles/index.css';\nimport Kanban from \"./components/kanban\"\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\n\n\nfunction App() {\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <Kanban></Kanban>\n    </DndProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport Bootstrap from \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}