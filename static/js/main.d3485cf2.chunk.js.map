{"version":3,"sources":["components/card.jsx","components/kanban.jsx","App.js","index.js"],"names":["Card","props","state","editable","title","description","id","this","className","React","Component","Kanban","allColumns","currentColumn","currentTitle","currentDescription","createColumn","deleteItem","bind","editItem","addCard","createSection","onDragEnd","closeModal","openModal","createTodo","clearAll","modal","updateLocalStorage","getLocalStorage","forEach","ele","localStorage","setItem","JSON","stringify","Object","keys","length","setState","todos","cards","uuid","colName","inprog","done","test","parse","getItem","i","columnItems","j","card","push","console","log","e","preventDefault","clear","field","currentTarget","value","onSubmit","handleSubmit","placeholder","type","onChange","update","document","getElementsByClassName","style","display","newTodoContainer","parentElement","previousElementSibling","deletedCard","find","x","idx","el","index","splice","result","destination","source","draggableId","droppableId","startColumn","endColumn","startDupes","Array","from","endDupes","removed","onClick","removeCol","provided","droppableProps","ref","innerRef","map","item","key","draggableProps","dragHandleProps","removeItem","indexOf","columns","column","App","DndProvider","backend","HTML5Backend","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d3485cf2.chunk.js","sourcesContent":["import React from 'react';\n\n\nclass Card extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      editable: false,\n      title: \"\",\n      description: \"\",\n      id: \"\",\n    };\n    this.state.title = this.props.title;\n    this.state.description = this.props.description;\n    this.state.id = this.props.id;\n  }\n  \n\n  render() {\n    return (\n      <div id={this.state.id}>\n        <div className=\"flex column todo-item\">\n          <div className=\"flex row space-between\">\n            <h3 className=\"ml-10\">{this.state.title}</h3>\n          </div>\n          <div>\n            <p className=\"ml-10 item-description\">{this.state.description}</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Card;","import React from \"react\";\nimport Card from './card.jsx';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport uuid from \"uuid/v4\"\n\n\nclass Kanban extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allColumns: [],\n      currentColumn: \"\",\n      currentTitle: \"\",\n      currentDescription: \"\",\n      createColumn: \"\",\n    };\n\n    this.deleteItem = this.deleteItem.bind(this);\n    this.editItem = this.editItem.bind(this);\n    this.addCard = this.addCard.bind(this);\n    this.createSection = this.createSection.bind(this);\n    this.onDragEnd = this.onDragEnd.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.openModal = this.openModal.bind(this);\n    this.createTodo = this.createTodo.bind(this);\n    this.clearAll = this.clearAll.bind(this);\n    this.modal = this.modal.bind(this);\n    this.updateLocalStorage = this.updateLocalStorage.bind(this);\n    this.createColumn = this.createColumn.bind(this);\n  }\n\n  componentDidMount() {\n    this.getLocalStorage();\n    // this.clearAll()\n  }\n\n  updateLocalStorage() {\n    // this.clearAll();\n    const allColumns = this.state.allColumns;\n    allColumns.forEach((ele) =>\n      localStorage.setItem(ele, JSON.stringify(this.state[ele]))\n    );\n    localStorage.setItem(\"allColumns\", JSON.stringify(allColumns));\n  }\n\n  async getLocalStorage() {\n    if (!Object.keys(localStorage).length) {\n      // localstorage of all columns instead of length??\n      await this.setState({\n        allColumns: [\"todos\", \"inprog\", \"done\"],\n        todos: {\n          cards: [],\n          id: uuid(),\n          colName: \"todos\",\n        },\n        inprog: {\n          cards: [],\n          id: uuid(),\n          colName: \"inprog\",\n        },\n        done: {\n          cards: [],\n          id: uuid(),\n          colName: \"done\",\n        },\n      });\n      let test = {\n        cards: [],\n        id: uuid(),\n        colName: \"done\",\n      };\n      localStorage.setItem(\"todos\", JSON.stringify(test));\n      localStorage.setItem(\"inprog\", JSON.stringify(test));\n      localStorage.setItem(\"done\", JSON.stringify(test));\n      localStorage.setItem(\n        \"allColumns\",\n        JSON.stringify([\"todos\", \"inprog\", \"done\"])\n      );\n    } else {\n      let allColumns = JSON.parse(localStorage.getItem(\"allColumns\"));\n\n      for (let i = 0; i < allColumns.length; i++) {\n        let currentColumn = allColumns[i];\n        await this.setState({\n          [currentColumn]: {\n            cards: [],\n            id: uuid(),\n            colName: `${currentColumn}`,\n          },\n        });\n        let cards = [];\n        let columnItems = JSON.parse(localStorage.getItem(allColumns[i]));\n\n        let length = columnItems.cards.length;\n        for (let j = 0; j < length; j++) {\n          let title = columnItems.cards[j].title;\n          let description = columnItems.cards[j].description;\n          let id = columnItems.cards[j].id;\n          const card = { title: title, description: description, id: id };\n          cards.push(card);\n          await this.setState({\n            [this.state[currentColumn].cards]: this.state[\n              currentColumn\n            ].cards.push(card),\n          });\n        }\n      }\n      this.setState({ allColumns: allColumns });\n      console.log(this.state);\n    }\n  }\n\n  async handleSubmit(e) {\n    e.preventDefault();\n    let cards;\n    const colName = this.state.currentColumn;\n    if (localStorage.getItem(colName) === null) {\n      cards = [];\n    } else {\n      cards = JSON.parse(localStorage.getItem(colName));\n    }\n    const card = {\n      title: this.state.currentTitle,\n      description: this.state.currentDescription,\n      id: uuid(),\n    };\n    await this.setState({\n      [this.state[colName].cards]: this.state[colName].cards.push(card),\n    });\n    this.updateLocalStorage();\n    this.closeModal();\n    this.setState({ currentTitle: \"\", currentDescription: \"\" });\n  }\n\n  clearAll() {\n    localStorage.clear();\n    this.setState({ allColumns: [] });\n    this.getLocalStorage();\n  }\n\n  update(field) {\n    return (e) =>\n      this.setState({\n        [field]: e.currentTarget.value,\n      });\n  }\n\n  createTodo() {\n    return (\n      <div className=\"create-todo-container\">\n        <form onSubmit={this.handleSubmit.bind(this)}>\n          <div className=\"mb-15\">\n            <label>\n              <input\n                placeholder=\"Title\"\n                type=\"text\"\n                value={this.state.currentTitle}\n                onChange={this.update(\"currentTitle\")}\n              />\n            </label>\n            <label>\n              <input\n                placeholder=\"Description\"\n                type=\"text\"\n                value={this.state.currentDescription}\n                onChange={this.update(\"currentDescription\")}\n              />\n            </label>\n          </div>\n          <button className=\"submit-todo\">Submit</button>\n        </form>\n      </div>\n    );\n  }\n\n  openModal() {\n    const modal = document.getElementsByClassName(\"newTodoForm\");\n    modal[0].style.display = \"flex\";\n  }\n\n  closeModal() {\n    const modal = document.getElementsByClassName(\"newTodoForm\");\n    modal[0].style.display = \"none\";\n    this.setState({ newTodoContainer: \"hidden\" });\n  }\n\n  addCard(colName) {\n    this.setState({ currentColumn: colName });\n    this.openModal();\n  }\n\n  async deleteItem(colName, e) {\n    const id = e.currentTarget.parentElement.previousElementSibling.id;\n    let cards = [...this.state[colName].cards];\n    const deletedCard = cards.find((x) => x.id === id);\n    let idx = 0;\n    cards.forEach((el, index) => {\n      if (el.id === deletedCard.id) {\n        return (idx = index);\n      }\n    });\n    cards.splice(idx, 1);\n    await this.setState({\n      [colName]: { cards, id: this.state[colName].id, colName: colName },\n    });\n    this.updateLocalStorage();\n  }\n\n  async editItem(colName, e) {\n    const id = e.currentTarget.parentElement.previousElementSibling.id;\n    let cards = [...this.state[colName].cards];\n    const deletedCard = cards.find((x) => x.id === id);\n    let idx = 0;\n    cards.forEach((el, index) => {\n      if (el.id === deletedCard.id) {\n        return (idx = index);\n      }\n    });\n    cards.splice(idx, 1);\n    await this.setState({\n      [colName]: { cards, id: this.state[colName].id, colName: colName },\n    });\n    this.updateLocalStorage();\n  }\n\n  async onDragEnd(result) {\n    const { destination, source, draggableId } = result;\n    if (!destination) return;\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    )\n      return;\n    const startColumn = this.state[source.droppableId].cards;\n    const endColumn = this.state[destination.droppableId].cards;\n    const startDupes = Array.from(startColumn);\n    const endDupes = Array.from(endColumn);\n\n    if (endColumn === startColumn) {\n      let [removed] = startDupes.splice(source.index, 1);\n      startDupes.splice(destination.index, 0, removed);\n      this.setState({\n        [source.droppableId]: {\n          cards: startDupes,\n          id: this.state[destination.droppableId].id,\n          colName: source.droppableId,\n        },\n      });\n    } else {\n      let [removed] = startDupes.splice(source.index, 1);\n      endDupes.splice(destination.index, 0, removed);\n      await this.setState({\n        [source.droppableId]: {\n          cards: startDupes,\n          id: this.state[source.droppableId].id,\n          colName: source.droppableId,\n        },\n        [destination.droppableId]: {\n          cards: endDupes,\n          id: this.state[destination.droppableId].id,\n          colName: destination.droppableId,\n        },\n      });\n      this.updateLocalStorage();\n    }\n  }\n\n  createSection(colName) {\n    return (\n      <div id=\"done-container\">\n        <h2>{colName}</h2>\n        <button className=\"mb-15 blue\" onClick={() => this.removeCol(colName)}>\n          -\n        </button>\n        <button className=\"mb-15 blue\" onClick={() => this.addCard(colName)}>\n          +\n        </button>\n        <Droppable droppableId={colName}>\n          {(provided) => {\n            return (\n              <div\n                id={colName}\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n              >\n                {this.state[colName].cards.map((item, idx) => {\n                  return (\n                    <Draggable key={item.id} draggableId={item.id} index={idx}>\n                      {(provided) => {\n                        return (\n                          <div\n                            ref={provided.innerRef}\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n                          >\n                            <Card\n                              title={item.title}\n                              description={item.description}\n                              id={item.id}\n                            />\n                            <div className=\"item-footer lightred flex row\">\n                              {/* <button\n                                className=\"item-button\"\n                                onClick={(e) => this.editItem(colName, e)}\n                              >\n                                Edit\n                              </button> */}\n                              <button\n                                className=\"item-button ml-10\"\n                                onClick={(e) => this.deleteItem(colName, e)}\n                              >\n                                Delete\n                              </button>\n                            </div>\n                          </div>\n                        );\n                      }}\n                    </Draggable>\n                  );\n                })}\n                {provided.placeholder}\n              </div>\n            );\n          }}\n        </Droppable>\n      </div>\n    );\n  }\n\n  removeCol(colName) {\n    localStorage.removeItem(colName);\n\n    const idx = this.state.allColumns.indexOf(colName)\n    let columns = Array.from(this.state.allColumns)\n    columns.splice(idx, 1)\n    localStorage.setItem(\"allColumns\", JSON.stringify(columns));\n    this.getLocalStorage();\n    // this.setState({allColumns: columns})\n    // console.log(this.state.allColumns.splice(idx, 1));\n  }\n\n  async createColumn() {\n    let columns = this.state.allColumns;\n    columns.push(this.state.createColumn);\n    await this.setState({\n      allColumns: columns,\n      [this.state.createColumn]: {\n        cards: [],\n        id: uuid(),\n        colName: this.state.createColumn,\n      },\n    });\n    this.updateLocalStorage();\n    console.log(this.state);\n  }\n\n  modal() {\n    return (\n      <div className=\"newTodoForm\">\n        <div className=\"modal-content\">\n          <h1>Add Todo</h1>\n          {this.createTodo()}\n          <button className=\"modal-close\" onClick={this.closeModal}>Close</button>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <DragDropContext onDragEnd={(result) => this.onDragEnd(result)}>\n          <h1 className=\"main-title\">Kanban</h1>\n          <div className=\"createColumn\">\n            <form className=\"columnForm\" onSubmit={() => this.createColumn()}>\n\n              <input\n                placeholder=\"Add Column\"\n                type=\"text\"\n                value={this.state.createColumn}\n                onChange={this.update(\"createColumn\")}\n              />\n              <button className=\"createColBtn\">+</button>\n            </form>\n            <button className=\"reset-button\" onClick={this.clearAll}>Reset to default</button>\n          </div>\n          <div className=\"space-around flex row bg-lightgray height-100\">\n            {this.state.allColumns.map((column, idx) => (\n              <section className=\"flex column width-20\" key={idx}>\n                {this.createSection(column)}\n              </section>\n            ))}\n            {/* {this.createSection(\"todos\")}\n            {this.createSection(\"inprog\")}\n            {this.createSection(\"done\")} */}\n          </div>\n        </DragDropContext>\n        {this.modal()}\n      </div>\n    );\n  }\n}\n\nexport default Kanban;\n","import React from 'react';\n// import logo from './mintbean.png';\nimport './styles/index.css';\nimport Kanban from \"./components/kanban\"\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\n\n\nfunction App() {\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <Kanban></Kanban>\n    </DndProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}